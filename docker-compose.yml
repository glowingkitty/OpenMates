version: '3.8'

services:
  strapiDB:
    restart: unless-stopped
    env_file: .env
    image: postgres:12.0-alpine
    environment:
      POSTGRES_USER: ${DATABASE_USERNAME}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_DB: ${DATABASE_NAME}
    volumes:
      - strapi-data:/var/lib/postgresql/data/
    networks:
      - openmates

  strapi:
    build:
      context: ./server/cms/strapi
      dockerfile: Dockerfile
    image: strapi:latest
    restart: unless-stopped
    env_file: .env
    environment:
      DATABASE_CLIENT: ${DATABASE_CLIENT}
      DATABASE_HOST: strapiDB
      DATABASE_PORT: ${DATABASE_PORT}
      DATABASE_NAME: ${DATABASE_NAME}
      DATABASE_USERNAME: ${DATABASE_USERNAME}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
      JWT_SECRET: ${JWT_SECRET}
      ADMIN_JWT_SECRET: ${ADMIN_JWT_SECRET}
      APP_KEYS: ${APP_KEYS}
      NODE_ENV: ${NODE_ENV}
    volumes:
      - ./server/cms/strapi/config:/opt/app/config
      - ./server/cms/strapi/src:/opt/app/src
      - ./server/cms/strapi/package.json:/opt/package.json
      - ./server/cms/strapi/yarn.lock:/opt/yarn.lock
      - ./server/cms/strapi/.env:/opt/app/.env
      - ./server/cms/strapi/public/uploads:/opt/app/public/uploads
    ports:
      - "${STRAPI_PORT}:${STRAPI_PORT}"
    networks:
      - openmates
    depends_on:
      - strapiDB

  rest-api:
    build:
      context: ./server/api
      dockerfile: Dockerfile
    env_file: .env
    environment:
      REST_API_PORT: ${REST_API_PORT}
      STRAPI_URL: "http://strapi:${STRAPI_PORT}"
      STRAPI_TOKEN: ${STRAPI_TOKEN}
      DRAGONFLY_URL: "dragonfly:${DRAGONFLY_PORT}"
      WEB_BROWSER_URL: "http://web_browser:${WEB_BROWSER_PORT}"
      WEB_BROWSER_SECRET_KEY: ${WEB_BROWSER_SECRET_KEY}
    ports:
      - "${REST_API_PORT}:${REST_API_PORT}"
    volumes:
      - .:/usr/src/OpenMates
    networks:
      - openmates
    depends_on:
      - strapi
      - dragonfly
      - web_browser

  celery-worker:
    build:
      context: ./server/api
      dockerfile: Dockerfile
    env_file: .env
    environment:
      STRAPI_URL: "http://strapi:${STRAPI_PORT}"
      STRAPI_TOKEN: ${STRAPI_TOKEN}
      DRAGONFLY_URL: "dragonfly:${DRAGONFLY_PORT}"
      PYTHONPATH: "/usr/src/OpenMates"
    command: celery -A server.task_management.task_management worker --loglevel=info
    volumes:
      - .:/usr/src/OpenMates
    networks:
      - openmates
    depends_on:
      - rest-api
      - dragonfly

  celery-beat:
    build:
      context: ./server/api
      dockerfile: Dockerfile
    env_file: .env
    environment:
      STRAPI_URL: "http://strapi:${STRAPI_PORT}"
      STRAPI_TOKEN: ${STRAPI_TOKEN}
      DRAGONFLY_URL: "dragonfly:${DRAGONFLY_PORT}"
      PYTHONPATH: "/usr/src/OpenMates"
    command: celery -A server.task_management.task_management beat --loglevel=info
    volumes:
      - .:/usr/src/OpenMates
    networks:
      - openmates
    depends_on:
      - rest-api
      - dragonfly

  dragonfly:
    image: docker.dragonflydb.io/dragonflydb/dragonfly
    ulimits:
      memlock: -1
    ports:
      - "${DRAGONFLY_PORT}:${DRAGONFLY_PORT}"
    volumes:
      - dragonfly-data:/data
    command:
      - "--maxmemory"
      - "3000mb"
    deploy:
      resources:
        limits:
          memory: 2.5G
    networks:
      - openmates

  web_browser:
    build:
      context: ./server/web_browser
      dockerfile: Dockerfile
    env_file: .env
    environment:
      WEB_BROWSER_PORT: ${WEB_BROWSER_PORT}
      WEB_BROWSER_SECRET_KEY: ${WEB_BROWSER_SECRET_KEY}
    volumes:
      - ./server/web_browser:/usr/src/web_browser
    networks:
      - openmates
    extra_hosts:
      - "host.docker.internal:host-gateway"

networks:
  openmates:

volumes:
  strapi-data:
  dragonfly-data: