#  _____________________________________________________________________
# |                                                                     |
# |         ____                  __  __        _                       |
# |        / __ \                |  \/   |     | |                      |
# |       | |  | |_ __   ___ _ __| \  /  | __ _| |_ ___  ___            |
# |       | |  | | '_ \ / _ \ '_ \ |\/ | |/ _` | __/ _ \/ __|           |
# |       | |__| | |_) |  __/ | | | |  | | (_| | ||  __/\__ \           |
# |        \____/| .__/ \___|_| |_|_|  |_|\__,_|\__\___||___/           |
# |              | |                                                    |
# |              |_|                                                    |
# |                                                                     |
# |_____________________________________________________________________|
#                       Your AI team mates.

#########################################################################
##################          Server Settings          ####################
#########################################################################

name: openmates-server

settings:
  #########################################################################
  ##### Testing settings
  #########################################################################

  testing:
    api_token: ${TEST_API_TOKEN}
    team_slug: ${TEST_TEAM_SLUG}
    discord_channel_name: ${TEST_DISCORD_CHANNEL_NAME}
    ai_mate_username: ${TEST_AI_MATE_USERNAME}


  #########################################################################
  ##### Basic server settings
  #########################################################################

  server:
    host: ${SERVER_HOST}
    environment: ${SERVER_ENVIRONMENT}
    # Ngrok can be used to expose the server to the internet, for development purposes
    ngrok:
      auth_token: ${NGROK_AUTHTOKEN}


  #########################################################################
  ##### AI team mates
  #########################################################################

  # All these default settings can be overwritten via the OpenMates REST API or web app.
  mates: ./api/configs/mates/mates.yml

  #########################################################################
  ##### Apps
  #########################################################################

  # Apps used by OpenMates
  apps: ./api/configs/apps/apps.yml


  #########################################################################
  ##### REST API
  #########################################################################

  # The REST API, used by the web application, the task management, the apps and external developers using the OpenMates API
  rest-api:
    port: ${REST_API_PORT}
    crypto_key: ${CRYPTO_KEY}
    crypto_salt: ${CRYPTO_SALT}


  #########################################################################
  ##### Web application
  #########################################################################

  # The web application for OpenMates, which will be used by the users and connects to the REST API
  # no settings yet. See docker-compose.yml for the default setup.


  #########################################################################
  ##### Website
  #########################################################################

  # The website for OpenMates, which will be used to promote the OpenMates project and explain what it is
  # no settings yet. See docker-compose.yml for the default setup.


  #########################################################################
  ##### Task management
  #########################################################################

  # Manages tasks that take longer then just milliseconds to complete or that need to be scheduled.
  # no settings yet. See docker-compose.yml for the default setup.


  #########################################################################
  ##### CMS
  #########################################################################

  # The content management system (CMS) for managing user data
  cms:
    node_env: ${NODE_ENV}
    port: ${CMS_PORT}
    token: ${CMS_TOKEN}
    api_token_salt: ${API_TOKEN_SALT}
    api_keys: ${API_KEYS}
    admin_jwt_secret: ${ADMIN_JWT_SECRET}
    transfer_token_salt: ${TRANSFER_TOKEN_SALT}


  #########################################################################
  ##### CMS database
  #########################################################################

  # The database for the content management system (CMS)
  cms-database:
    client: ${DATABASE_CLIENT}
    name: ${DATABASE_NAME}
    filename: ${DATABASE_FILENAME}
    username: ${DATABASE_USERNAME}
    password: ${DATABASE_PASSWORD}


  #########################################################################
  ##### In-memory database
  #########################################################################

  # The in-memory database for temporarly storing frequently accessed data
  in-memory-database:
    port: ${IN_MEMORY_DATABASE_PORT}
