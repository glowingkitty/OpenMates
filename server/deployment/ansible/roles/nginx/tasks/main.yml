---
# Install required packages
- name: Install Nginx and Certbot
  apt:
    name:
      - nginx
      - certbot
      - python3-certbot-nginx
    state: present

# Setup main Nginx configuration with rate limiting
- name: Setup main Nginx configuration
  template:
    src: nginx_main.conf.j2
    dest: /etc/nginx/nginx.conf
    mode: '0644'

# Remove default nginx site
- name: Remove default nginx site
  file:
    path: /etc/nginx/sites-enabled/default
    state: absent

# SSL certificate generation for each enabled app
- name: Generate SSL certificates for Plane
  shell: |
    certbot certonly --nginx --{{ env if env == 'production' else 'staging' }} --non-interactive --agree-tos \
    --email {{ admin_email }} \
    -d {{ plane_subdomain }}
  args:
    creates: /etc/letsencrypt/live/{{ plane_subdomain }}/fullchain.pem
  when: lookup('env', 'APP_PROJECT_MANAGEMENT_PLANE_INSTALL_SERVER') | bool

# Setup apps Nginx configuration
- name: Setup apps Nginx configuration
  template:
    src: apps.conf.j2
    dest: /etc/nginx/sites-available/apps.conf
    mode: '0644'

- name: Enable apps configuration
  file:
    src: /etc/nginx/sites-available/apps.conf
    dest: /etc/nginx/sites-enabled/apps.conf
    state: link

- name: Test Nginx configuration
  command: nginx -t
  changed_when: false
  register: nginx_test

- name: Restart Nginx if configuration is valid
  service:
    name: nginx
    state: restarted
  when: nginx_test.rc == 0

# Setup automatic renewal for SSL certificates
- name: Enable automatic certificate renewal
  cron:
    name: "Certbot Renewal"
    job: "certbot renew --quiet --no-self-upgrade"
    minute: "0"
    hour: "3"
    weekday: "1"