---
# roles/nginx/tasks/main.yml

# Install required packages
- name: Install Nginx and Certbot
  apt:
    name:
      - nginx
      - certbot
      - python3-certbot-nginx
    state: present
    update_cache: yes

# Setup main Nginx configuration with rate limiting in http context
- name: Setup main Nginx configuration
  template:
    src: nginx_main.conf.j2
    dest: /etc/nginx/nginx.conf
    mode: '0644'

# Setup Nginx server blocks for all applications
- name: Setup Nginx server blocks for applications
  template:
    src: apps.conf.j2
    dest: /etc/nginx/sites-available/apps.conf
    mode: '0644'

# Enable apps Nginx configuration
- name: Enable apps Nginx configuration
  file:
    src: /etc/nginx/sites-available/apps.conf
    dest: /etc/nginx/sites-enabled/apps.conf
    state: link

# Remove default nginx site
- name: Remove default nginx site
  file:
    path: /etc/nginx/sites-enabled/default
    state: absent

# Generate SSL certificates for all enabled applications
- name: Generate SSL certificates for applications
  shell: |
    certbot certonly --nginx --{{ env if env == 'production' else 'staging' }} --non-interactive --agree-tos \
    --email {{ admin_email }} \
    {% for app, details in applications %}
    -d {{ details.subdomain }}
    {% endfor %}
  args:
    creates: >
      {% for app, details in applications %}
      /etc/letsencrypt/live/{{ details.subdomain }}/fullchain.pem
      {% endfor %}
  when: >
    {% for app, details in applications %}
    applications["{{ app }}"].subdomain is defined{% if not loop.last %} and {% endif %}
    {% endfor %}

# Test Nginx configuration
- name: Test Nginx configuration
  command: nginx -t
  changed_when: false
  register: nginx_test

# Restart Nginx if configuration is valid
- name: Restart Nginx if configuration is valid
  service:
    name: nginx
    state: restarted
  when: nginx_test.rc == 0

# Enable automatic renewal for SSL certificates
- name: Enable automatic certificate renewal
  cron:
    name: "Certbot Renewal"
    job: "certbot renew --quiet --no-self-upgrade"
    minute: "0"
    hour: "3"
    weekday: "1"