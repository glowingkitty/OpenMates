# backend/core/directus/schemas/messages.yml
# Defines the schema for the 'messages' collection in Directus.
# Each record represents a single chat message.
messages:
  type: collection
  fields:
    id:
      type: uuid
      note: "Primary Key - Unique identifier for the message, auto-generated by Directus."

    client_message_id: # formerly message_id
      type: string
      note: "[Indexed] Unique identifier for the message. Format: {last_10_chars_of_chat_id}-{uuid_v4}. Generated by the initiator (client for user messages, server for AI messages)."
      options:
        unique: true # Assuming this should still be unique

    chat_id:
      type: string
      note: "Foreign Key linking back to the chats.id"

    hashed_user_id:
      type: string
      note: "[Indexed] The hashed ID of the user who sent the message. Null if sent by an AI/system."

    encrypted_content:
      type: textfield
      note: "[Encrypted] The final, complete Tiptap JSON content of the message, encrypted using the chat's key from Vault"

    role:
      type: string
      note: "[Indexed] Role of the sender: 'user', 'assistant', or 'system'."

    encrypted_sender_name:
      type: string
      note: "[Encrypted] Sender name, encrypted using chat-specific key"

    encrypted_category:
      type: string  
      note: "[Encrypted] Category, encrypted using chat-specific key"

    # sender_name is removed as it's derived from category via translations in the UI.

    created_at:
      type: integer
      note: "Unix timestamp (seconds) when the message was fully completed and persisted. Provided by the application."

    updated_at:
      type: integer
      note: "Unix timestamp (seconds) when the message was last updated. Crucial for delta syncs."
