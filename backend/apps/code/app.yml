name: |
  Code
description: |
  Write, test, improve and execute code.
icon_image: |
  coding.svg
icon_colorgradient:
  start: |
    #155D91
  end: |
    #42ABF4

settings_and_memories:
  - id: |
      preferred_languages_frameworks_tech
  - id: |
      current_projects
  - id: |
      past_projects
  - id: |
      want_to_learn

# Step 1 - Planning: User writes down a plan of requirements of what they want and what they think how things should work
# Step 2 - Refinement: User tells ai the plan, ai checks for files in the existing project to better understand the project in the context of the requirements and then has a conversation to clarify the requirements / update them and creates a todo list or in case of larger projects / changes multiple files with todos which should result in testabable units / changes to the project. Ideally this is split up in a way that multiple ais can work on the tasks without creating colliding code changes.
# Step 3 - Coding & Feedback loop: the ai starts to update the code / implement the changes for the tasks block. Ideally multiple ais can work on the various tasks blocks without colliding with each other. Ideally the ais dont need further feedback because they have asked all relevant details in the planning & refinement stages. But when conflicts / unclear situations do occur, they ask the user for input and then continue the work based on the input.
# Step 4 - Testing: the ai is generating tests or test instructions and either runs them by itself or asks the user to
# Step 5 - Documentation: once the ai has completed the tasks or block of tasks, it updates the todo markdown file, updates the changelog file and creates or updates documentation files.
# Interruption: if the chat is getting too long, the ai is updating the todo's and changelog and starts a fresh chat

focuses:

  - id: |
      plan_project_requirements
    name: |
      Plan project
    description: |
      Step 1: Plan a project.
    stage: |
      planning
    process:
      - ""

  - id: |
      write_code
    name: |
      Write code
    description: |
      Write & modify code.
    stage: |
      planning
    process:
      - "ask users clearifying question to make the requirements clear and create requirements.md file"
      - "for more complex tasks: create todo.md file and keep it updated with progress. Include filepaths or function names / variable names relevant."
      - "if problem can't be solved within a few steps, ask if new approach should be tried or if requirements should be redefined"
    # systemprompt just an early placeholder. Nowhere near complete.
    systemprompt: |
      You are a programming expert.

  - id: |
      learn_new_tech
    name: |
      Learn new tech
    description: |
      Start learning a new programming language, framework or other new technology.
    process:
      - "asks user what their learning goal is (understanding a specific part of a new technology, extending knowledge, etc.)
      - "show examples, suggest a sample project, consider Q&As or other learning methods for understanding a tech"
      - "goal is to assist software developers who don't want to use AI assisted coding but still profit from the use of AI (and ease the developers into accepting AI support more)."

  - id: |
      explain_project
    name: |
      Explain project
    description: |
      Clones a git repo, analyzes it and explains its architecture, issues and more.
    stage: |
      planning

  - id: |
      research_solutions
    name: |
      Research solitions
    description: |
      Brainstorm & research what tech would work well for the requirements of the user.
    stage: |
      planning

  - id: |
      code_walkthrough
    name: |
      Code walkthrough
    description: |
      Talk through code problems step-by-step. Think through issues without jumping straight to solutions."
    stage: |
      planning

  - id: |
      setup_infrastructure
    name: |
      Setup infrastructure
    description: |
      Get assistance for setting up a software or infrastructure.
    stage: |
      planning
    process:
      - "mate asks multiple questions to understand what user wants to setup and in what context"
      - "mate asks clearification questions if first response is not clear"
      - "mate provides step-by-step instructions for setting up the software or infrastructure the user asked for"
      - "mate explains the first step, then waits for user feedback, then continues with the next step if step is successful, etc."
      - "at the end of the successful setup process, mate suggests saving the setup instructions as markdown (for humans), terraform, ansible playbook or cloud-init script (depending on the context)"
    # systemprompt just an early placeholder. Nowhere near complete.
    systemprompt: |
      You are an expert in setting up infrastructure and software via terminal.